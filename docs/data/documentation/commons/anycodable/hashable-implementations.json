{"identifier":{"url":"doc:\/\/Commons\/documentation\/Commons\/AnyCodable\/Hashable-Implementations","interfaceLanguage":"swift"},"metadata":{"modules":[{"name":"Commons"}],"role":"collectionGroup","title":"Hashable Implementations"},"hierarchy":{"paths":[["doc:\/\/Commons\/documentation\/Commons","doc:\/\/Commons\/documentation\/Commons\/AnyCodable"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"kind":"article","topicSections":[{"title":"Instance Methods","generated":true,"identifiers":["doc:\/\/Commons\/documentation\/Commons\/AnyCodable\/hash(into:)"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/commons\/anycodable\/hashable-implementations"]}],"references":{"doc://Commons/documentation/Commons/AnyCodable":{"kind":"symbol","identifier":"doc:\/\/Commons\/documentation\/Commons\/AnyCodable","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyCodable","kind":"identifier"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"AnyCodable"}],"abstract":[{"text":"A type-erased codable object.","type":"text"}],"title":"AnyCodable","url":"\/documentation\/commons\/anycodable","role":"symbol"},"doc://Commons/documentation/Commons":{"type":"topic","kind":"symbol","role":"collection","url":"\/documentation\/commons","identifier":"doc:\/\/Commons\/documentation\/Commons","title":"Commons","abstract":[]},"doc://Commons/documentation/Commons/AnyCodable/hash(into:)":{"kind":"symbol","role":"symbol","abstract":[],"title":"hash(into:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"hash"},{"text":"(","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"text":"Hasher","preciseIdentifier":"s:s6HasherV","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/commons\/anycodable\/hash(into:)","type":"topic","identifier":"doc:\/\/Commons\/documentation\/Commons\/AnyCodable\/hash(into:)"}}}