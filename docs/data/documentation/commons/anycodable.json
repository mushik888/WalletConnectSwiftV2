{"hierarchy":{"paths":[["doc:\/\/Commons\/documentation\/Commons"]]},"abstract":[{"text":"A type-erased codable object.","type":"text"}],"metadata":{"navigatorTitle":[{"text":"AnyCodable","kind":"identifier"}],"roleHeading":"Structure","role":"symbol","symbolKind":"struct","title":"AnyCodable","modules":[{"name":"Commons"}],"externalID":"s:7Commons10AnyCodableV","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyCodable","kind":"identifier"}]},"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"topicSections":[{"identifiers":["doc:\/\/Commons\/documentation\/Commons\/AnyCodable\/init(_:)","doc:\/\/Commons\/documentation\/Commons\/AnyCodable\/init(any:)"],"title":"Initializers"},{"title":"Instance Properties","identifiers":["doc:\/\/Commons\/documentation\/Commons\/AnyCodable\/stringRepresentation","doc:\/\/Commons\/documentation\/Commons\/AnyCodable\/value"]},{"identifiers":["doc:\/\/Commons\/documentation\/Commons\/AnyCodable\/get(_:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/Commons\/documentation\/Commons\/AnyCodable\/CustomStringConvertible-Implementations","doc:\/\/Commons\/documentation\/Commons\/AnyCodable\/Decodable-Implementations","doc:\/\/Commons\/documentation\/Commons\/AnyCodable\/Encodable-Implementations","doc:\/\/Commons\/documentation\/Commons\/AnyCodable\/Equatable-Implementations","doc:\/\/Commons\/documentation\/Commons\/AnyCodable\/Hashable-Implementations"],"generated":true,"title":"Default Implementations"}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Commons\/documentation\/Commons\/AnyCodable"},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyCodable","kind":"identifier"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"anchor":"overview","type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"AnyCodable"},{"text":" type allows to encode and decode data prior to knowing the underlying type, delaying the type-matching","type":"text"},{"type":"text","text":" "},{"text":"to a later point in execution.","type":"text"}]},{"inlineContent":[{"text":"When dealing with serialized JSON data structures where a single key can match to different types of values, the ","type":"text"},{"code":"AnyCodable","type":"codeVoice"},{"type":"text","text":" "},{"text":"type can be used as a placeholder for ","type":"text"},{"type":"codeVoice","code":"Any"},{"type":"text","text":" while preserving the "},{"type":"codeVoice","code":"Codable"},{"text":" conformance of the containing type. Another use case","type":"text"},{"type":"text","text":" "},{"type":"text","text":"for the "},{"code":"AnyCodable","type":"codeVoice"},{"type":"text","text":" type is to facilitate the encoding of arrays of heterogeneous-typed values."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can call "},{"type":"codeVoice","code":"get(_:)"},{"text":" to transform the underlying value back to the type you specify.","type":"text"}]}]}],"relationshipsSections":[{"identifiers":["doc:\/\/Commons\/s23CustomStringConvertibleP","doc:\/\/Commons\/Se","doc:\/\/Commons\/SE","doc:\/\/Commons\/SQ","doc:\/\/Commons\/SH"],"type":"conformsTo","kind":"relationships","title":"Conforms To"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/commons\/anycodable"]}],"references":{"doc://Commons/documentation/Commons/AnyCodable/Equatable-Implementations":{"url":"\/documentation\/commons\/anycodable\/equatable-implementations","identifier":"doc:\/\/Commons\/documentation\/Commons\/AnyCodable\/Equatable-Implementations","kind":"article","title":"Equatable Implementations","role":"collectionGroup","type":"topic","abstract":[]},"doc://Commons/documentation/Commons/AnyCodable/init(any:)":{"abstract":[{"type":"text","text":"Creates a type-erased codable value that wraps the given instance."}],"url":"\/documentation\/commons\/anycodable\/init(any:)","identifier":"doc:\/\/Commons\/documentation\/Commons\/AnyCodable\/init(any:)","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"any","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Any","kind":"keyword"},{"kind":"text","text":")"}],"kind":"symbol","type":"topic","title":"init(any:)","role":"symbol"},"doc://Commons/documentation/Commons/AnyCodable/init(_:)":{"abstract":[{"text":"Creates a type-erased codable value that wraps the given instance.","type":"text"}],"identifier":"doc:\/\/Commons\/documentation\/Commons\/AnyCodable\/init(_:)","type":"topic","url":"\/documentation\/commons\/anycodable\/init(_:)","title":"init(_:)","role":"symbol","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://Commons/documentation/Commons/AnyCodable/stringRepresentation":{"url":"\/documentation\/commons\/anycodable\/stringrepresentation","identifier":"doc:\/\/Commons\/documentation\/Commons\/AnyCodable\/stringRepresentation","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"stringRepresentation","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}],"kind":"symbol","title":"stringRepresentation","role":"symbol","type":"topic","abstract":[{"type":"text","text":"A textual representation of the underlying encoded data. Returns an empty string if the type fails to encode."}]},"doc://Commons/documentation/Commons":{"type":"topic","kind":"symbol","role":"collection","url":"\/documentation\/commons","identifier":"doc:\/\/Commons\/documentation\/Commons","title":"Commons","abstract":[]},"doc://Commons/SH":{"identifier":"doc:\/\/Commons\/SH","type":"unresolvable","title":"Swift.Hashable"},"doc://Commons/documentation/Commons/AnyCodable/Decodable-Implementations":{"role":"collectionGroup","title":"Decodable Implementations","type":"topic","identifier":"doc:\/\/Commons\/documentation\/Commons\/AnyCodable\/Decodable-Implementations","url":"\/documentation\/commons\/anycodable\/decodable-implementations","abstract":[],"kind":"article"},"doc://Commons/documentation/Commons/AnyCodable":{"kind":"symbol","identifier":"doc:\/\/Commons\/documentation\/Commons\/AnyCodable","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyCodable","kind":"identifier"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"AnyCodable"}],"abstract":[{"text":"A type-erased codable object.","type":"text"}],"title":"AnyCodable","url":"\/documentation\/commons\/anycodable","role":"symbol"},"doc://Commons/documentation/Commons/AnyCodable/CustomStringConvertible-Implementations":{"url":"\/documentation\/commons\/anycodable\/customstringconvertible-implementations","identifier":"doc:\/\/Commons\/documentation\/Commons\/AnyCodable\/CustomStringConvertible-Implementations","kind":"article","title":"CustomStringConvertible Implementations","role":"collectionGroup","type":"topic","abstract":[]},"doc://Commons/s23CustomStringConvertibleP":{"type":"unresolvable","identifier":"doc:\/\/Commons\/s23CustomStringConvertibleP","title":"Swift.CustomStringConvertible"},"doc://Commons/documentation/Commons/AnyCodable/value":{"fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"value"},{"text":": ","kind":"text"},{"text":"Any","kind":"keyword"}],"kind":"symbol","type":"topic","title":"value","identifier":"doc:\/\/Commons\/documentation\/Commons\/AnyCodable\/value","abstract":[],"url":"\/documentation\/commons\/anycodable\/value","role":"symbol"},"doc://Commons/SQ":{"type":"unresolvable","identifier":"doc:\/\/Commons\/SQ","title":"Swift.Equatable"},"doc://Commons/documentation/Commons/AnyCodable/get(_:)":{"abstract":[{"type":"text","text":"Returns the underlying value, provided it matches the type spcified."}],"url":"\/documentation\/commons\/anycodable\/get(_:)","title":"get(_:)","type":"topic","kind":"symbol","identifier":"doc:\/\/Commons\/documentation\/Commons\/AnyCodable\/get(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"get"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":".Type) "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"T","kind":"typeIdentifier"}]},"doc://Commons/Se":{"type":"unresolvable","identifier":"doc:\/\/Commons\/Se","title":"Swift.Decodable"},"doc://Commons/documentation/Commons/AnyCodable/Hashable-Implementations":{"role":"collectionGroup","kind":"article","type":"topic","title":"Hashable Implementations","identifier":"doc:\/\/Commons\/documentation\/Commons\/AnyCodable\/Hashable-Implementations","abstract":[],"url":"\/documentation\/commons\/anycodable\/hashable-implementations"},"doc://Commons/documentation/Commons/AnyCodable/Encodable-Implementations":{"url":"\/documentation\/commons\/anycodable\/encodable-implementations","identifier":"doc:\/\/Commons\/documentation\/Commons\/AnyCodable\/Encodable-Implementations","kind":"article","title":"Encodable Implementations","role":"collectionGroup","type":"topic","abstract":[]},"doc://Commons/SE":{"title":"Swift.Encodable","identifier":"doc:\/\/Commons\/SE","type":"unresolvable"}}}